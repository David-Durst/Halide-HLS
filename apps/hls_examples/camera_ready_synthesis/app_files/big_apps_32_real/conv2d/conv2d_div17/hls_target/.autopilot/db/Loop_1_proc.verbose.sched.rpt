

================================================================
== Vivado HLS Report for 'Loop_1_proc'
================================================================
* Date:           Tue Mar 17 14:42:47 2020

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        conv2d_div17
* Solution:       hls_target
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.60|      7.33|        0.70|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2067619|  2067619|  2067619|  2067619|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |          |      Latency      | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |- Loop 1  |  2067617|  2067617|        15|          1|          1|  2067604|    yes   |
        +----------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 1
  Pipeline-0: II = 1, D = 15, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	17  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	2  / true
17 --> 
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_18 (4)  [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecMemCore(i288* %p_hw_input_stencil_stream_V_value_V, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_19 (5)  [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i288* %p_hw_input_stencil_stream_V_value_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_20 (6)  [1/1] 1.59ns  loc: hls_target.cpp:67
newFuncRoot:2  br label %.preheader


 <State 2>: 7.33ns
ST_2: indvar_flatten (8)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i21 [ 0, %newFuncRoot ], [ %indvar_flatten_next, %.preheader.preheader ]

ST_2: p_hw_output_y_scan_1 (9)  [1/1] 0.00ns  loc: hls_target.cpp:69
.preheader:1  %p_hw_output_y_scan_1 = phi i11 [ 0, %newFuncRoot ], [ %p_hw_output_y_scan_s, %.preheader.preheader ]

ST_2: p_hw_output_x_scan_2 (10)  [1/1] 0.00ns
.preheader:2  %p_hw_output_x_scan_2 = phi i11 [ 0, %newFuncRoot ], [ %p_hw_output_x_scan_1, %.preheader.preheader ]

ST_2: exitcond_flatten (11)  [1/1] 3.15ns
.preheader:3  %exitcond_flatten = icmp eq i21 %indvar_flatten, -29548

ST_2: indvar_flatten_next (12)  [1/1] 2.59ns
.preheader:4  %indvar_flatten_next = add i21 %indvar_flatten, 1

ST_2: StgValue_26 (13)  [1/1] 0.00ns
.preheader:5  br i1 %exitcond_flatten, label %.exitStub, label %.preheader.preheader

ST_2: exitcond8 (16)  [1/1] 2.94ns  loc: hls_target.cpp:69
.preheader.preheader:1  %exitcond8 = icmp eq i11 %p_hw_output_x_scan_2, -130

ST_2: p_hw_output_x_scan_s (17)  [1/1] 2.07ns  loc: hls_target.cpp:69
.preheader.preheader:2  %p_hw_output_x_scan_s = select i1 %exitcond8, i11 0, i11 %p_hw_output_x_scan_2

ST_2: p_hw_output_x_scan_1 (72)  [1/1] 2.33ns  loc: hls_target.cpp:69
.preheader.preheader:57  %p_hw_output_x_scan_1 = add i11 1, %p_hw_output_x_scan_s


 <State 3>: 4.40ns
ST_3: p_hw_output_y_scan_2 (18)  [1/1] 2.33ns  loc: hls_target.cpp:67
.preheader.preheader:3  %p_hw_output_y_scan_2 = add i11 1, %p_hw_output_y_scan_1

ST_3: tmp5 (20)  [1/1] 2.94ns  loc: hls_target.cpp:159
.preheader.preheader:5  %tmp5 = icmp eq i11 %p_hw_output_y_scan_1, -971

ST_3: p_hw_output_y_scan_s (22)  [1/1] 2.07ns  loc: hls_target.cpp:69
.preheader.preheader:7  %p_hw_output_y_scan_s = select i1 %exitcond8, i11 %p_hw_output_y_scan_2, i11 %p_hw_output_y_scan_1

ST_3: tmp_value_V (25)  [1/1] 2.45ns  loc: hls_target.cpp:75
.preheader.preheader:10  %tmp_value_V = call i288 @_ssdm_op_Read.ap_fifo.volatile.i288P(i288* %p_hw_input_stencil_stream_V_value_V)

ST_3: p_345 (26)  [1/1] 0.00ns  loc: ../../../lib_files/Stencil.h:122->hls_target.cpp:75
.preheader.preheader:11  %p_345 = trunc i288 %tmp_value_V to i32

ST_3: p_357 (27)  [1/1] 0.00ns  loc: ../../../lib_files/Stencil.h:122->hls_target.cpp:75
.preheader.preheader:12  %p_357 = call i32 @_ssdm_op_PartSelect.i32.i288.i32.i32(i288 %tmp_value_V, i32 64, i32 95)

ST_3: p_381 (28)  [1/1] 0.00ns  loc: ../../../lib_files/Stencil.h:122->hls_target.cpp:75
.preheader.preheader:13  %p_381 = call i32 @_ssdm_op_PartSelect.i32.i288.i32.i32(i288 %tmp_value_V, i32 192, i32 223)

ST_3: p_393 (29)  [1/1] 0.00ns  loc: ../../../lib_files/Stencil.h:122->hls_target.cpp:75
.preheader.preheader:14  %p_393 = call i32 @_ssdm_op_PartSelect.i32.i288.i32.i32(i288 %tmp_value_V, i32 256, i32 287)

ST_3: tmp_3 (30)  [1/1] 0.00ns  loc: hls_target.cpp:75
.preheader.preheader:15  %tmp_3 = call i31 @_ssdm_op_PartSelect.i31.i288.i32.i32(i288 %tmp_value_V, i32 32, i32 62)

ST_3: tmp_5 (32)  [1/1] 0.00ns  loc: hls_target.cpp:75
.preheader.preheader:17  %tmp_5 = call i31 @_ssdm_op_PartSelect.i31.i288.i32.i32(i288 %tmp_value_V, i32 96, i32 126)

ST_3: tmp_6 (34)  [1/1] 0.00ns  loc: hls_target.cpp:75
.preheader.preheader:19  %tmp_6 = call i30 @_ssdm_op_PartSelect.i30.i288.i32.i32(i288 %tmp_value_V, i32 128, i32 157)

ST_3: tmp_7 (36)  [1/1] 0.00ns  loc: hls_target.cpp:75
.preheader.preheader:21  %tmp_7 = call i31 @_ssdm_op_PartSelect.i31.i288.i32.i32(i288 %tmp_value_V, i32 160, i32 190)

ST_3: tmp_8 (38)  [1/1] 0.00ns  loc: hls_target.cpp:75
.preheader.preheader:23  %tmp_8 = call i31 @_ssdm_op_PartSelect.i31.i288.i32.i32(i288 %tmp_value_V, i32 224, i32 254)

ST_3: tmp_1 (68)  [1/1] 2.94ns  loc: hls_target.cpp:159
.preheader.preheader:53  %tmp_1 = icmp eq i11 %p_hw_output_x_scan_s, -131


 <State 4>: 4.37ns
ST_4: tmp_mid1 (19)  [1/1] 2.94ns  loc: hls_target.cpp:159
.preheader.preheader:4  %tmp_mid1 = icmp eq i11 %p_hw_output_y_scan_2, -971

ST_4: p_353 (31)  [1/1] 0.00ns  loc: hls_target.cpp:92
.preheader.preheader:16  %p_353 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_3, i1 false)

ST_4: p_365 (33)  [1/1] 0.00ns  loc: hls_target.cpp:106
.preheader.preheader:18  %p_365 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_5, i1 false)

ST_4: p_389 (39)  [1/1] 0.00ns  loc: hls_target.cpp:134
.preheader.preheader:24  %p_389 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_8, i1 false)

ST_4: tmp8 (40)  [1/1] 2.90ns  loc: hls_target.cpp:143
.preheader.preheader:25  %tmp8 = add i32 %p_389, %p_381

ST_4: tmp1 (43)  [1/1] 2.90ns  loc: hls_target.cpp:143
.preheader.preheader:28  %tmp1 = add i32 %p_353, %p_345

ST_4: tmp2 (44)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:29  %tmp2 = add i32 %p_393, %p_357

ST_4: tmp3 (45)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:30  %tmp3 = add i32 %p_365, %tmp2


 <State 5>: 4.37ns
ST_5: tmp_mid2 (21)  [1/1] 0.00ns  loc: hls_target.cpp:159 (grouped into LUT with out node tmp_last_V)
.preheader.preheader:6  %tmp_mid2 = select i1 %exitcond8, i1 %tmp_mid1, i1 %tmp5

ST_5: p_371 (35)  [1/1] 0.00ns  loc: hls_target.cpp:113
.preheader.preheader:20  %p_371 = call i32 @_ssdm_op_BitConcatenate.i32.i30.i2(i30 %tmp_6, i2 0)

ST_5: p_377 (37)  [1/1] 0.00ns  loc: hls_target.cpp:120
.preheader.preheader:22  %p_377 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_7, i1 false)

ST_5: tmp9 (41)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:26  %tmp9 = add i32 %p_371, %p_377

ST_5: tmp7 (42)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:27  %tmp7 = add i32 %tmp8, %tmp9

ST_5: tmp_last_V (69)  [1/1] 2.07ns  loc: hls_target.cpp:159 (out node of the LUT)
.preheader.preheader:54  %tmp_last_V = and i1 %tmp_1, %tmp_mid2


 <State 6>: 4.37ns
ST_6: tmp4 (46)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:31  %tmp4 = add i32 %tmp1, %tmp3

ST_6: p_397 (47)  [1/1] 2.19ns  loc: hls_target.cpp:143
.preheader.preheader:32  %p_397 = add nsw i32 %tmp7, %tmp4

ST_6: tmp (51)  [1/1] 0.00ns  loc: hls_target.cpp:146
.preheader.preheader:36  %tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_397, i32 31)


 <State 7>: 3.95ns
ST_7: sext_cast (48)  [1/1] 0.00ns  loc: hls_target.cpp:146
.preheader.preheader:33  %sext_cast = sext i32 %p_397 to i65

ST_7: mul (49)  [5/5] 3.95ns  loc: hls_target.cpp:146
.preheader.preheader:34  %mul = mul i65 8084644322, %sext_cast


 <State 8>: 3.95ns
ST_8: mul (49)  [4/5] 3.95ns  loc: hls_target.cpp:146
.preheader.preheader:34  %mul = mul i65 8084644322, %sext_cast


 <State 9>: 3.95ns
ST_9: mul (49)  [3/5] 3.95ns  loc: hls_target.cpp:146
.preheader.preheader:34  %mul = mul i65 8084644322, %sext_cast


 <State 10>: 3.95ns
ST_10: mul (49)  [2/5] 3.95ns  loc: hls_target.cpp:146
.preheader.preheader:34  %mul = mul i65 8084644322, %sext_cast


 <State 11>: 3.95ns
ST_11: mul (49)  [1/5] 3.95ns  loc: hls_target.cpp:146
.preheader.preheader:34  %mul = mul i65 8084644322, %sext_cast

ST_11: tmp_13 (54)  [1/1] 0.00ns  loc: hls_target.cpp:146
.preheader.preheader:39  %tmp_13 = call i28 @_ssdm_op_PartSelect.i28.i65.i32.i32(i65 %mul, i32 37, i32 64)


 <State 12>: 3.83ns
ST_12: neg_mul (50)  [1/1] 3.83ns  loc: hls_target.cpp:146
.preheader.preheader:35  %neg_mul = sub i65 0, %mul


 <State 13>: 4.81ns
ST_13: tmp_12 (52)  [1/1] 0.00ns  loc: hls_target.cpp:146 (grouped into LUT with out node neg_ti)
.preheader.preheader:37  %tmp_12 = call i28 @_ssdm_op_PartSelect.i28.i65.i32.i32(i65 %neg_mul, i32 37, i32 64)

ST_13: tmp_9 (53)  [1/1] 0.00ns  loc: hls_target.cpp:146 (grouped into LUT with out node neg_ti)
.preheader.preheader:38  %tmp_9 = sext i28 %tmp_12 to i32

ST_13: tmp_4 (55)  [1/1] 0.00ns  loc: hls_target.cpp:146
.preheader.preheader:40  %tmp_4 = sext i28 %tmp_13 to i32

ST_13: tmp_10 (56)  [1/1] 0.00ns  loc: hls_target.cpp:146 (grouped into LUT with out node neg_ti)
.preheader.preheader:41  %tmp_10 = select i1 %tmp, i32 %tmp_9, i32 %tmp_4

ST_13: neg_ti (57)  [1/1] 2.74ns  loc: hls_target.cpp:146 (out node of the LUT)
.preheader.preheader:42  %neg_ti = sub i32 0, %tmp_10

ST_13: p_399 (58)  [1/1] 2.07ns  loc: hls_target.cpp:146
.preheader.preheader:43  %p_399 = select i1 %tmp, i32 %neg_ti, i32 %tmp_4


 <State 14>: 2.90ns
ST_14: tmp_15 (60)  [1/1] 0.00ns  loc: hls_target.cpp:148 (grouped into LUT with out node p_neg)
.preheader.preheader:45  %tmp_15 = shl i32 %p_399, 4

ST_14: p_neg (61)  [1/1] 2.90ns  loc: hls_target.cpp:148 (out node of the LUT)
.preheader.preheader:46  %p_neg = sub i32 0, %tmp_15


 <State 15>: 4.37ns
ST_15: tmp_s (62)  [1/1] 2.19ns  loc: hls_target.cpp:148
.preheader.preheader:47  %tmp_s = sub i32 %p_neg, %p_399

ST_15: p_401 (63)  [1/1] 2.19ns  loc: hls_target.cpp:148
.preheader.preheader:48  %p_401 = add i32 %p_397, %tmp_s


 <State 16>: 2.74ns
ST_16: empty (15)  [1/1] 0.00ns
.preheader.preheader:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2067604, i64 2067604, i64 2067604)

ST_16: tmp_2 (23)  [1/1] 0.00ns  loc: hls_target.cpp:70
.preheader.preheader:8  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3)

ST_16: StgValue_81 (24)  [1/1] 0.00ns  loc: hls_target.cpp:71
.preheader.preheader:9  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_16: tmp_14 (59)  [1/1] 0.00ns  loc: hls_target.cpp:146 (grouped into LUT with out node p_408)
.preheader.preheader:44  %tmp_14 = trunc i32 %p_399 to i28

ST_16: tmp_16 (64)  [1/1] 0.00ns  loc: hls_target.cpp:149 (grouped into LUT with out node p_408)
.preheader.preheader:49  %tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_401, i32 31)

ST_16: p_402_cast (65)  [1/1] 0.00ns  loc: hls_target.cpp:149 (grouped into LUT with out node p_408)
.preheader.preheader:50  %p_402_cast = select i1 %tmp_16, i28 -1, i28 0

ST_16: p_408 (66)  [1/1] 2.74ns  loc: hls_target.cpp:155 (out node of the LUT)
.preheader.preheader:51  %p_408 = add i28 %p_402_cast, %tmp_14

ST_16: tmp_value_V_4 (67)  [1/1] 0.00ns  loc: hls_target.cpp:155
.preheader.preheader:52  %tmp_value_V_4 = sext i28 %p_408 to i32

ST_16: StgValue_87 (70)  [1/1] 0.00ns  loc: hls_target.cpp:164
.preheader.preheader:55  call void @_ssdm_op_Write.ap_auto.volatile.i32P.i1P(i32* %hw_output_V_value_V, i1* %hw_output_V_last_V, i32 %tmp_value_V_4, i1 %tmp_last_V)

ST_16: empty_78 (71)  [1/1] 0.00ns  loc: hls_target.cpp:166
.preheader.preheader:56  %empty_78 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_2)

ST_16: StgValue_89 (73)  [1/1] 0.00ns  loc: hls_target.cpp:69
.preheader.preheader:58  br label %.preheader


 <State 17>: 0.00ns
ST_17: StgValue_90 (75)  [1/1] 0.00ns
.exitStub:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.6ns, clock uncertainty: 0.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [8]  (1.59 ns)

 <State 2>: 7.33ns
The critical path consists of the following:
	'phi' operation ('_hw_output_x___scan_dim_0') with incoming values : ('_hw_output_x___scan_dim_0', hls_target.cpp:69) [10]  (0 ns)
	'icmp' operation ('exitcond8', hls_target.cpp:69) [16]  (2.94 ns)
	'select' operation ('p_hw_output_x_scan_s', hls_target.cpp:69) [17]  (2.07 ns)
	'add' operation ('_hw_output_x___scan_dim_0', hls_target.cpp:69) [72]  (2.33 ns)

 <State 3>: 4.4ns
The critical path consists of the following:
	'add' operation ('p_hw_output_y_scan_2', hls_target.cpp:67) [18]  (2.33 ns)
	'select' operation ('p_hw_output_y_scan_s', hls_target.cpp:69) [22]  (2.07 ns)

 <State 4>: 4.37ns
The critical path consists of the following:
	'add' operation ('tmp2', hls_target.cpp:143) [44]  (2.19 ns)
	'add' operation ('tmp3', hls_target.cpp:143) [45]  (2.19 ns)

 <State 5>: 4.37ns
The critical path consists of the following:
	'add' operation ('tmp9', hls_target.cpp:143) [41]  (2.19 ns)
	'add' operation ('tmp7', hls_target.cpp:143) [42]  (2.19 ns)

 <State 6>: 4.37ns
The critical path consists of the following:
	'add' operation ('tmp4', hls_target.cpp:143) [46]  (2.19 ns)
	'add' operation ('_397', hls_target.cpp:143) [47]  (2.19 ns)

 <State 7>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul', hls_target.cpp:146) [49]  (3.95 ns)

 <State 8>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul', hls_target.cpp:146) [49]  (3.95 ns)

 <State 9>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul', hls_target.cpp:146) [49]  (3.95 ns)

 <State 10>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul', hls_target.cpp:146) [49]  (3.95 ns)

 <State 11>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul', hls_target.cpp:146) [49]  (3.95 ns)

 <State 12>: 3.83ns
The critical path consists of the following:
	'sub' operation ('neg_mul', hls_target.cpp:146) [50]  (3.83 ns)

 <State 13>: 4.81ns
The critical path consists of the following:
	'select' operation ('tmp_10', hls_target.cpp:146) [56]  (0 ns)
	'sub' operation ('neg_ti', hls_target.cpp:146) [57]  (2.74 ns)
	'select' operation ('_399', hls_target.cpp:146) [58]  (2.07 ns)

 <State 14>: 2.9ns
The critical path consists of the following:
	'shl' operation ('tmp_15', hls_target.cpp:148) [60]  (0 ns)
	'sub' operation ('p_neg', hls_target.cpp:148) [61]  (2.9 ns)

 <State 15>: 4.37ns
The critical path consists of the following:
	'sub' operation ('tmp_s', hls_target.cpp:148) [62]  (2.19 ns)
	'add' operation ('_401', hls_target.cpp:148) [63]  (2.19 ns)

 <State 16>: 2.74ns
The critical path consists of the following:
	'add' operation ('_408', hls_target.cpp:155) [66]  (2.74 ns)

 <State 17>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
